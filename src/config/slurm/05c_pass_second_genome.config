#!/usr/bin/env bash

# Source project configuration file
config_file=$(pwd)/src/config/example-project.config
source $config_file


## Parameters
# Filters
FILT_DEPTH=100 # Minimum nb of reads supporting a variant
FILT_FREQ=0.64 # Relative variant frequency between 1-FILT_FREQ and FILT_FREQ
FILT_QUAL=20   # Minimum Phred-score of the sequenced nucleotide
FILT_ALLELES=2 # Minimum number of alleles of each parental haplotype carried by each fragment
FILT_NAME=FILT_depth${FILT_DEPTH}_freq${FILT_FREQ/0./}_qual${FILT_QUAL}

# Files
script_name_extract_recombinants=05b_extract_recombinants.bash
script_name_genotype_reads=05a_genotype_reads.bash
genome=$CAST_GENOME
intervals=$CAST_INTERVALS
genome_name="CAST" # Reversed as compared to pass on the first genome
alt_genome_name="B6" # Reversed as compared to pass on the first genome
vcf_file=${SNPCALL}/2_castaneus/Joint_variant_calling.raw_variants.vcf
freq_vcf_file=${vcf_file/.vcf/.freq_vcf.txt}

# Folders
genotyping_folder=${CAST_GENOT} # Folder genotyping Genome 1
recombinants_folder=${CAST_RECOMB} # Folder recombinants Genome 1
input_folder=${B6_RECOMB}
mapping_folder=$MAPPING/2_castaneus
mapping_suffix='sorted.markedDup.only_mapped_fragments.only_primary'
candidates_folder=$genotyping_folder/candidates_ID
tmp_folder=$RECOMBINANTS/tmp_CAST

# Create folders
if [ ! -d $candidates_folder ] ; then mkdir $candidates_folder ; fi
if [ ! -d $tmp_folder/ ] ; then mkdir -p $tmp_folder/ ; fi


## After recombinants have been identified in each subset (see step 
## 05b_extract_recombinants), the remaining list of potential candidates is 
## greatly reduced. As such, all the findings in all the subsets can be 
## regrouped in only one file for each sample.
for sample in ${LIST_SAMPLES[@]} ; do
	echo $sample
	
	# Regroup all Recombinants.Min_allele
	output_file=${input_folder}/${sample}.${FILT_NAME}.Recombinants.Min_allele_${FILT_ALLELES}.txt
	zcat $input_folder/${sample}/${sample}.Subset_00.${FILT_NAME}.Recombinants.Min_allele_${FILT_ALLELES}.txt.gz | head -n1 > $output_file
	for subset_file in $input_folder/${sample}/${sample}.*.${FILT_NAME}.Recombinants.Min_allele_${FILT_ALLELES}.txt.gz ; do
		zcat $subset_file | sed '1,1d' >> $output_file
	done

	# Regroup all sorted.read_ends.txt
	output_file=${input_folder}/${sample}.${FILT_NAME}.Fragments.sorted.read_ends.txt
	zcat $input_folder/${sample}/${sample}.Subset_00.${FILT_NAME}.Fragments.sorted.read_ends.txt.gz | head -n1 > $output_file
	for subset_file in $input_folder/${sample}/${sample}.*.${FILT_NAME}.Fragments.sorted.read_ends.txt.gz ; do
		zcat $subset_file | sed '1,1d'>> $output_file
	done

done





## Prepare freq vcf file
bash $PROJ_SRC/utils/prepare_freq_vcf_file.bash -i $vcf_file -o $freq_vcf_file


## Run on all samples
for sample in ${LIST_SAMPLES[@]} ; do
	
	## PREPARE BED FILES
	paired_bed=$mapping_folder/${sample}.${mapping_suffix}.paired_bed
	paired_bam=$mapping_folder/${sample}.${mapping_suffix}.bam
	if [ ! -f $paired_bed ] ; then
		bash $PROJ_SRC/utils/prepare_paired_bed.bash -i $paired_bam -o $paired_bed
	fi


	## SUBSET INPUT FILES TO CANDIDATES
	# Extract the IDs of the potential recombinants (candidates identified with 
	# processing on the first parental genome â€” see config files 05a and 05b)
	list_candidates=$candidates_folder/${sample}.list_candidates.Min_allele_${FILT_ALLELES}.txt
	sed '1,1d' ${input_folder}/${sample}.${FILT_NAME}.Recombinants.Min_allele_${FILT_ALLELES}.txt | cut -f1 > $list_candidates
	# Extract the corresponding lines from the original bam file
	input_bam_file=$SNPCALL/2_castaneus/${sample}.sorted.markedDup.only_mapped_fragments.only_primary.onIntervals.recal_reads.bam
	subset_bam_file=$candidates_folder/${sample}.sorted.markedDup.only_mapped_fragments.only_primary.onIntervals.Candidates_Recombinants_Min_allele_${FILT_ALLELES}.bam
	java -jar $PICARD/FilterSamReads.jar \
		I=$input_bam_file \
		O=$subset_bam_file \
		FILTER=includeReadList \
		WRITE_READS_FILES=FALSE \
		READ_LIST_FILE=$list_candidates
	
	
	## WRITE SUBMISSION FILE
	SUB_file=$PROJ_SUB/05c_pass_second_genome.${sample}.sub
	LOG_file=$PROJ_LOG/05c_pass_second_genome.${sample}

	echo "#\!/bin/bash" > $SUB_file
	echo "#SBATCH --job-name=${sample}" >> $SUB_file
	echo "#SBATCH --partition=normal" >> $SUB_file
	echo "#SBATCH --time=3:00:00" >> $SUB_file
	echo "#SBATCH --cpus-per-task=1" >> $SUB_file
	echo "#SBATCH --mem=10G" >> $SUB_file
	echo "#SBATCH --output=${LOG_file}.out" >> $SUB_file
	echo "#SBATCH --error=${LOG_file}.err" >> $SUB_file

	## GENOTYPE CANDIDATES ON THE SECOND GENOME
	output_genotyping_prefix=$genotyping_folder/${sample}
	tmp_prefix=$tmp_folder/${sample}
	echo bash $PROJ_SRC_CORE/$script_name_genotype_reads -c $config_file -o $output_genotyping_prefix -t $tmp_prefix -i $subset_bam_file -f $freq_vcf_file -b $intervals -g $genome -r $genome_name -a $alt_genome_name --sub $SUB_file >> $SUB_file

	
	## EXTRACT RECOMBINANTS ON THE SECOND GENOME
	output_recombinants_prefix=$recombinants_folder/${sample}
	echo bash $PROJ_SRC_CORE/$script_name_extract_recombinants -c $config_file -o $output_recombinants_prefix -i ${output_genotyping_prefix}.Genotyped_ReadsxVariants.txt -b $paired_bed -d $FILT_DEPTH -f $FILT_FREQ -q $FILT_QUAL -m $FILT_ALLELES -n $FILT_NAME -r $genome_name -a $alt_genome_name --sub $SUB_file >> $SUB_file

	## SUBMIT JOB
	sbatch $SUB_file
	
done


## (Optional): if we want to have the final recombinants with coordinates from the first genome
final_recombinants_folder=$FINAL_RECOMBINANTS
folder_ID_recombinants=${final_recombinants_folder}/Folder_ID
if [ ! -d $folder_ID_recombinants ] ; then mkdir $folder_ID_recombinants ; fi

for sample in ${LIST_SAMPLES[@]} ; do

	# Extract IDs
	list_IDs=$folder_ID_recombinants/${sample}.${FILT_NAME}.Recombinants.Min_allele_${FILT_ALLELES}.IDs.txt
	zcat $recombinants_folder/${sample}.${FILT_NAME}.Recombinants.Min_allele_${FILT_ALLELES}.txt.gz | cut -f1 > $list_IDs

	# Extract lines from recombinants on first genome
	grep -f $list_IDs \
		${input_folder}/${sample}.${FILT_NAME}.Recombinants.Min_allele_${FILT_ALLELES}.txt \
		| awk -v SAMPLE=$sample -v OFS="\t" '
		NR==1 { 
			$(NF-2)="CHR:START-STOP"
			$NF=""
			$(NF-1)="SAMPLE_FILE"
			print $0
		} NR > 1 {
			$(NF-2)=$(NF-2)":"$(NF-1)"-"$NF 
			$NF="" 
			$(NF-1)=SAMPLE 
			print $0
		}' - \
		> $final_recombinants_folder/${sample}.${FILT_NAME}.Recombinants.Min_allele_${FILT_ALLELES}.coordinates_genome1.txt

done


