#!/usr/bin/env bash

####         #### If the number of subsets is large, it is highly recommended
#### WARNING #### to make sure that this script is run on an external cluster
####         #### (see src/config/slurm/05a_genotype_reads.config)

# Source project configuration file
config_file=$(pwd)/src/config/example-project-F2.config
source $config_file


## Parameters
# Filters
FILT_DEPTH=100 # Minimum nb of reads supporting a variant
FILT_FREQ=0.64 # Relative variant frequency between 1-FILT_FREQ and FILT_FREQ
FILT_QUAL=20   # Minimum Phred-score of the sequenced nucleotide
FILT_ALLELES=2 # Minimum number of alleles of each parental haplotype carried by each fragment
FILT_NAME=FILT_depth${FILT_DEPTH}_freq${FILT_FREQ/0./}_qual${FILT_QUAL}

# Files and folders
script_name=05b_extract_recombinants.bash
genome_name="B6"
alt_genome_name="CAST"
input_folder=${B6_GENOT} # Folder genotyping Genome 1
output_folder=${B6_RECOMB} # Folder recombinants Genome 1
mapping_folder=$MAPPING/1_domesticus
mapping_suffix='sorted.markedDup.only_mapped_fragments.only_primary'
subsets_folder=${RECOMBINANTS}/00_List_of_subsets

# Create folders
for sample in ${LIST_SAMPLES[@]} ; do
	if [ ! -d $output_folder/$sample/ ] ; then mkdir -p $output_folder/$sample/ ; fi
done


## Run on all samples
for sample in ${LIST_SAMPLES[@]} ; do
	
	
	# Prepare paired bed files if they don't already exist
	paired_bed=$mapping_folder/${sample}.${mapping_suffix}.paired_bed
	paired_bam=$mapping_folder/${sample}.${mapping_suffix}.bam
	if [ ! -f $paired_bed ] ; then
		bash $PROJ_SRC/utils/prepare_paired_bed.bash -i $paired_bam -o $paired_bed
	fi


	# Loop on all subsets
	for subset in $subsets_folder/* ; do

		# Name of prefixes
		subset_name="${subset##*/}"
		subset_prefix=${subset_name/.bed/}
		output_prefix=$output_folder/${sample}/${sample}.${subset_prefix}
		input_file=$input_folder/${sample}/${sample}.${subset_prefix}.Genotyped_ReadsxVariants.txt

		echo bash $PROJ_SRC_CORE/$script_name -c $config_file -o $output_prefix -i $input_file -b $paired_bed -d $FILT_DEPTH -f $FILT_FREQ -q $FILT_QUAL -m	$FILT_ALLELES -n $FILT_NAME -r $genome_name -a $alt_genome_name

	done

done


## (Optional) Verification: All the files that are outputted need to be redone
for sample in ${LIST_SAMPLES[@]} ; do
	for LOG_ERR_file in $PROJ_LOG/${script_name/.bash}.${genome_name}.${sample}/*err ; do
		var=`cat $fileID`
		if [ ! -z $var ] ; then
			echo $LOG_ERR_file
		fi
	done
done

## (Optional) Verification: Check that all final outputs are present
for sample in ${LIST_SAMPLES[@]} ; do
	echo $sample
	ll $output_folder/${sample}/${sample}*Min_allele_${FILT_ALLELES}.txt.gz | wc -l
done


